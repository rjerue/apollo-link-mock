"use strict";var e=require("apollo-link"),r=require("graphql/language/printer"),n=require("apollo-utilities");function t(e,r){e.prototype=Object.create(r.prototype),e.prototype.constructor=e,e.__proto__=r}var o=require("lodash.isequal"),s=function(n){function s(e,r){var t;return void 0===r&&(r=!0),(t=n.call(this)||this).addTypename=!0,t.mockedResponsesByKey={},t.addTypename=r,e&&e.forEach(function(e){t.addMockedResponse(e)}),t}t(s,n);var i=s.prototype;return i.addMockedResponse=function(e){var r=u(e.request,this.addTypename),n=this.mockedResponsesByKey[r];n||(this.mockedResponsesByKey[r]=n=[]),n.push(e)},i.request=function(n){var t,s=u(n,this.addTypename),i=(this.mockedResponsesByKey[s]||[]).find(function(e,r){return!!o(n.variables||{},e.request.variables||{})&&(t=r,!0)});if(!i||void 0===t)throw new Error("No more mocked responses for the query: "+r.print(n.query)+", variables: "+JSON.stringify(n.variables));i.keep||this.mockedResponsesByKey[s].splice(t,1);var c=i.result,a=i.error,p=i.delay,l=i.newData;if(l&&(i.result=l(),this.mockedResponsesByKey[s].push(i)),!c&&!a)throw new Error("Mocked response should contain either result or error: "+s);return new e.Observable(function(e){var r=setTimeout(function(){a?e.error(a):(c&&e.next(c),e.complete())},p||0);return function(){clearTimeout(r)}})},s}(e.ApolloLink),i=function(r){function n(){var e;return(e=r.call(this)||this).unsubscribers=[],e.setups=[],e}t(n,r);var o=n.prototype;return o.request=function(r){var n=this;return new e.Observable(function(e){return n.setups.forEach(function(e){return e()}),n.observer=e,function(){n.unsubscribers.forEach(function(e){return e()})}})},o.simulateResult=function(e){var r=this;setTimeout(function(){var n=r.observer;if(!n)throw new Error("subscription torn down");e.result&&n.next&&n.next(e.result),e.error&&n.error&&n.error(e.error)},e.delay||0)},o.onSetup=function(e){this.setups=this.setups.concat([e])},o.onUnsubscribe=function(e){this.unsubscribers=this.unsubscribers.concat([e])},n}(e.ApolloLink);function u(e,t){var o=e.query&&r.print(t?n.addTypenameToDocument(e.query):e.query);return JSON.stringify({query:o})}exports.MockLink=s,exports.MockSubscriptionLink=i,exports.mockObservableLink=function(){return new i},exports.mockSingleLink=function(){for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];var t=r[r.length-1],o=r.slice(0,r.length-1);return"boolean"!=typeof t&&(o=r,t=!0),new s(o,t)};
//# sourceMappingURL=apollo-link-mock.cjs.production.min.js.map
